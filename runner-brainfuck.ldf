%%
%% This is file `runner-brainfuck.ldf',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% runner-brainfuck.dtx  (with options: `package')
%% 
%% Do not distribute a modified version of this file.
%% 
%% Communicate any suggestions for changing this package
%% to Bruno Le Floch (blflatex@gmail.com).
%% 
\int_new:N \l__runner_brainfuck_cell_int
\int_new:N \l__runner_brainfuck_instr_int
\prop_new:N \l__runner_brainfuck_match_prop
\seq_new:N \l__runner_brainfuck_match_seq
\int_new:N \l__runner_brainfuck_length_int
\cs_new_nopar:Npn \__runner_brainfuck_current_name:
  { l__runner_brainfuck_\int_use:N \l__runner_brainfuck_cell_int _int }
\cs_new_protected_nopar:Npn \__runner_brainfuck_current_provide:
  {
    \cs_if_exist:cF { \__runner_brainfuck_current_name: }
      { \int_new:c { \__runner_brainfuck_current_name: } }
  }
\cs_new_nopar:Npn \__runner_brainfuck_current_value:
  {
    \cs_if_exist:cTF { \__runner_brainfuck_current_name: }
      { \int_use:c { \__runner_brainfuck_current_name: } }
      { 0 }
  }
\cs_new_protected_nopar:Npn \__runner_brainfuck_run:
  {
    \__runner_brainfuck_clean:
    \__runner_brainfuck_matches:
    \__runner_brainfuck_execute:
  }
\cs_new_protected_nopar:Npn \__runner_brainfuck_clean:
  {
    \tl_set:Nx \l__runner_program_str
      {
        \tl_map_function:NN
          \l__runner_program_str
          \__runner_brainfuck_clean_aux:n
      }
    \int_set:Nn \l__runner_brainfuck_length_int
      { \tl_count:N \l__runner_program_str }
  }
\cs_new:Npn \__runner_brainfuck_clean_aux:n #1
  { \cs_if_exist:cT { __runner_brainfuck_#1: } {#1} }
\cs_new_protected_nopar:Npn \__runner_brainfuck_matches:
  {
    \int_set:Nn \l__runner_brainfuck_instr_int { 1 }
    \tl_map_inline:Nn \l__runner_program_str
      {
        \cs_if_exist_use:c { __runner_brainfuck_matches_##1: }
        \int_incr:N \l__runner_brainfuck_instr_int
      }
  }
\cs_new_protected_nopar:cpn { __runner_brainfuck_matches_[: }
  {
    \seq_push:No \l__runner_brainfuck_match_seq
      { \int_use:N \l__runner_brainfuck_instr_int }
  }
\cs_new_protected_nopar:cpn { __runner_brainfuck_matches_]: }
  {
    \seq_pop:NN \l__runner_brainfuck_match_seq \l__runner_tmpa_tl
    \prop_put:NVV
      \l__runner_brainfuck_match_prop
      \l__runner_tmpa_tl
      \l__runner_brainfuck_instr_int
    \prop_put:NVV
      \l__runner_brainfuck_match_prop
      \l__runner_brainfuck_instr_int
      \l__runner_tmpa_tl
  }
\cs_new_protected_nopar:Npn \__runner_brainfuck_execute:
  {
    \int_set:Nn \l__runner_brainfuck_instr_int { 1 }
    \int_until_do:nn
      { \l__runner_brainfuck_instr_int > \l__runner_brainfuck_length_int }
      {
        \exp_args:Nf \tl_map_inline:nn
          {
            \str_range:Nnn \l__runner_program_str
              { \l__runner_brainfuck_instr_int }
              { -1 }
          }
          {
            \use:c { __runner_brainfuck_##1: }
            \int_incr:N \l__runner_brainfuck_instr_int
          }
      }
  }
\cs_new_protected_nopar:cpn { __runner_brainfuck_>: }
  { \int_incr:N \l__runner_brainfuck_cell_int }
\cs_new_protected_nopar:cpn { __runner_brainfuck_<: }
  { \int_decr:N \l__runner_brainfuck_cell_int }
\cs_new_protected_nopar:cpn { __runner_brainfuck_+: }
  {
    \__runner_brainfuck_current_provide:
    \int_incr:c { \__runner_brainfuck_current_name: }
  }
\cs_new_protected_nopar:cpn { __runner_brainfuck_-: }
  {
    \__runner_brainfuck_current_provide:
    \int_decr:c { \__runner_brainfuck_current_name: }
  }
\cs_new_protected_nopar:cpn { __runner_brainfuck_.: }
  { \__runner_output_char:n { \__runner_brainfuck_current_value: } }
\cs_new_protected_nopar:cpn { __runner_brainfuck_,: }
  {
    \__runner_brainfuck_current_provide:
    \tl_if_empty:NTF \l__runner_input_str
      { \int_set_eq:cN { \__runner_brainfuck_current_name: } \c_minus_one }
      {
        \tl_set:Nx \l__runner_tmpa_tl
          { \str_head:N \l__runner_input_str }
        \tl_set:Nx \l__runner_input_str
          { \str_tail:N \l__runner_input_str }
        \int_set:cn { \__runner_brainfuck_current_name: }
          { \exp_after:wN ` \l__runner_tmpa_tl }
      }
  }
\cs_new_protected_nopar:cpn { __runner_brainfuck_[: }
  {
    \int_compare:nNnT \__runner_brainfuck_current_value: = \c_zero
      { \__runner_brainfuck_jump: }
  }
\cs_new_protected_nopar:cpn { __runner_brainfuck_]: }
  {
    \int_compare:nNnF \__runner_brainfuck_current_value: = \c_zero
      { \__runner_brainfuck_jump: }
  }
\cs_new_protected_nopar:Npn \__runner_brainfuck_jump:
  {
    \prop_get:NVN
      \l__runner_brainfuck_match_prop
      \l__runner_brainfuck_instr_int
      \l__runner_tmpa_tl
    \int_set:Nn \l__runner_brainfuck_instr_int { \l__runner_tmpa_tl }
    \tl_map_break:
  }
%% 
%%
%% End of file `runner-brainfuck.ldf'.
